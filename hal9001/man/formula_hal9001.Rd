% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formula_hal9001.R
\name{formula_hal9001}
\alias{formula_hal9001}
\title{HAL formula: Formula for specifying functional form of HAL}
\usage{
formula_hal9001(
  formula,
  data,
  smoothness_orders = NULL,
  include_zero_order = F,
  bins = NULL
)
}
\arguments{
\item{formula}{A character string specifying the hal9001 model.
The format should be of the form "y ~ h(x) + i(w) + d(z) + h(x,w) + h(x,w,z) + .^2"
where "y" is the outcome and "w,x,y,z" are variables in \code{data}.
Each term represents a single main-term/interaction to be included in the model.
 For example, h(x), i(x), and d(x) signify that all
 one-way/main term basis functions of the variable x should be included.
 h(x,w), i(x,w), d(x,w) specifies that all interaction (two-way) basis functions between x and w
 should be included in the model. Similarly, h(x,w,z), i(x,w,z), d(x,w,z) specifies
 that all interaction (three-way) basis functions between x,w,z should be included in the model.
 Note that "y ~ h(x,y,z)" will only construct three-way basis functions for x,y,z
 and not the two-way and one-way basis functions.
 Additionally, a formula of the form "y ~ ." will generate all one-way main term basis functions for variables in \code{data}.
 Similarly, "y ~ .^2" will generate all basis functions up to degree 2 for all variables in \code{data}.
 More generally, "y ~ .^max_degree" will construct all basis functions up to degree max_degree.
 One can combine all the notions above. For example,
 "y ~ h(x,w,z) + ." and "y ~ h(x,w,z) + ." will generate all one-way (resp. up to two-way) basis functions
 and additionally all the three-way interaction basis functions between variables w,x,z.
The letters h, i, d specify functional restrictions of each term:
h represents no constraints on the term,
i specifies that the term should be enforced to be monotonely increasing,
d specifies that the term should be enforced to be monotonely decreasing.,}

\item{data}{A data.frame or named matrix containing the outcome and covariates specified in the formula.}

\item{smoothness_orders}{Same as \code{smoothness_orders} in function \code{fit_hal}.
Note it should be of length 1 or length ncol(data)-1. Vector recycling will be employed otherwise.}

\item{include_zero_order}{Same as \code{include_zero_order} in function \code{fit_hal}}

\item{bins}{Same as \code{bins} in function \code{fit_hal}}
}
\description{
HAL formula: Formula for specifying functional form of HAL
}
\details{
The function allows users to specify the functional form/model of
hal9001 similar to \code{\link[glm]{glm}}. The user can specify which interactions to include,
monotonicity constraints, and smoothness constraints.
The returned formula object can be fed directly into \code{fit_hal}
and the fit can be run with minimal (no) user input.
}
