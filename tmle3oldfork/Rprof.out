sample.interval=20000
"readLines" "summaryRprof" 
"readLines" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"strsplit" "summaryRprof" 
"FUN" "lapply" "summaryRprof" 
"is.factor" "unique.default" "FUN" "lapply" "summaryRprof" 
"FUN" "lapply" "summaryRprof" 
"as.integer" "as.integer" "table" "summaryRprof" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
".Call" ".rs.listInferredPackages" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" 
"ps$estimates" "colMeans" 
"UUIDgenerate" "<Anonymous>" "new_task$add_columns" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"forderv" "dcast.data.table" "dcast" "self$long_to_mat" "self$clever_covariates" "ps$estimates" "colMeans" 
"forderv" "CJ" "do.call" "dcast.data.table" "dcast" "self$long_to_mat" "self$clever_covariates" "ps$estimates" "colMeans" 
"dcast.data.table" "dcast" "self$long_to_mat" "self$clever_covariates" "ps$estimates" "colMeans" 
"FUN" "lapply" "self$clever_covariates" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "ps$estimates" "colMeans" 
"setalloccol" "setDT" "dcast.data.table" "dcast" "self$long_to_mat" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"forderv" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.list.default" "as.list" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"unlist" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"unlist" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"names" "names" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.list.default" "as.list" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.list.default" "as.list" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"unlist" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"do.call" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"names" "names" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"is.ff" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"forderv" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "do.call" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"forderv" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.list.default" "as.list" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.list.default" "as.list" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"is.ff" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"as.list" "as.matrix.data.table" "as.matrix" "FUN" "lapply" "Summary.data.frame" "sum" "[.data.table" "[" "FUN" "lapply" "ps$estimates" "colMeans" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
".Call" ".rs.readSourceDocument" ".rs.discoverPackageDependencies" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.listIndexedPackages" "basename" ".rs.getCompletionsPackages" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"close.connection" "close" "readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"close.connection" "close" "readRDS" "FUN" "lapply" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"file.exists" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"gzfile" "readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"forderv" "frankv" "FUN" "lapply" "setDT" "dcast.data.table" "dcast" "self$long_to_mat" "ps$estimates" "colMeans" 
"is" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
".rs.scalar" ".rs.scalar" ".rs.makeCompletions" ".rs.emptyCompletions" "<Anonymous>" "ps$estimates" "colMeans" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.isRScriptInPackageBuildTarget" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "ps$estimates" "colMeans" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "ps$estimates" "colMeans" 
"isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"lazyLoadDBfetch" "get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"lazyLoadDBfetch" "get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.listInferredPackages" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"c" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"getwd" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsArgument" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" "ps$estimates" "colMeans" 
"tolower" "nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"getwd" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" "args" "print" "eval" "eval" "withVisible" "evalVis" "capture.output" ".rs.getSignature" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"unlist" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.listInferredPackages" ".rs.getCompletionsLibraryContext" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.getNAMESPACEImportedSymbols" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.isBrowserActive" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"file.exists" "find.package" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"gzfile" "readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"close.connection" "close" "readRDS" "index.search" "utils::help" ".rs.getHelp" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.isRScriptInPackageBuildTarget" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
".Call" ".rs.isBrowserActive" ".rs.reticulate.replIsActive" "<Anonymous>" "ps$estimates" "colMeans" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.isRScriptInPackageBuildTarget" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"deparse" "paste" ".rs.availablePackages" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"fn" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.recursiveWalk" ".rs.discoverPackageDependencies" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"list" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" "ps$estimates" "colMeans" 
"sys.call" "match.call" "as.vector" "setdiff" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"cat" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"nchar" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.getNAMESPACEImportedSymbols" ".rs.getCompletionsNAMESPACE" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".Call" ".rs.isRScriptInPackageBuildTarget" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"getwd" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" "quietly" ".rs.getAnywhere" ".rs.resolveObjectFromFunctionCall" ".rs.getCompletionsFunction" ".rs.appendCompletions" ".rs.getRCompletions" ".rs.appendCompletions" "<Anonymous>" "ps$estimates" "colMeans" 
"gsub" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"lazyLoadDBfetch" "get" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"inherits" ".rs.getCompletionType" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"sub" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"lapply" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"file.exists" "index.search" "utils::help" "eval" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "ps$estimates" "colMeans" 
"close.connection" "close" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"$<-" "make.callContext" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" ".rs.toDataFrame" ".rs.assignCachedData" ".rs.addCachedData" "f" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "withCallingHandlers" ".rs.callAs" "View" "ps$estimates" "colMeans" 
"hist.default" "hist" "withCallingHandlers" "suppressWarnings" "FUN" "lapply" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"cat" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"getExportedValue" "::" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"print.default" "print" "print.data.table" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"[[" "str.default" "NextMethod" "str.data.frame" "str" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"get" "<Anonymous>" "ps$estimates" "colMeans" 
"format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"unique" "setdiff" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"mode" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"asNamespace" "getExportedValue" "::" "options" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"%in%" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"list" "FUN" "lapply" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
".Call" ".rs.isBrowserActive" ".rs.reticulate.replIsActive" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"parent.frame" "tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
".rs.makeCompletions" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"names" "names" "[.data.table" "[" "ps$estimates" "colMeans" 
"lapply" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"paste0" ".format.zeros" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"getOption" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
".Call" ".rs.isBrowserActive" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"gsum" "gforce" "[.data.table" "[" "ps$estimates" "colMeans" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatch" "FUN" "vapply" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"objects" ".rs.getCompletionsActiveFrame" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"tryCatchList" "tryCatch" "FUN" "vapply" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" "ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"ps$estimates" "colMeans" 
"get" "getExportedValue" "::" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"lapply" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"setTimeLimit" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"setTimeLimit" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"setTimeLimit" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"sys.parent" "sys.function" "match.call" "as.vector" "setdiff" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"encodeString" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"isNamespace" "asNamespace" "getExportedValue" "::" "eval" "eval" "FUN" "lapply" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.vector" "setdiff" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
"setTimeLimit" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueAsString" "<Anonymous>" 
"stopifnot" "head.default" "utils::head" "FUN" "vapply" "object_summaries" "gsub" "indent" "format.R6" "format" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueDescription" "<Anonymous>" 
".Call" "f" "callFun" "rstudioapi::documentSaveAll" "save_all" "load_all" 
"unlist" "%in%" "<Anonymous>" "mapply" "create_fields" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "<Anonymous>" "description$new" "desc_desc_get" "pkg_name" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "unload" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"gc" "unload_dll" "pkgload::load_all" "load_all" 
"file" "readLines" "parseNamespaceFile" "parse_ns_file" "setup_ns_imports" "create_ns_env" "pkgload::load_all" "load_all" 
"read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "<Anonymous>" "description$new" "desc_desc" "pkg_desc" "load_imports" "pkgload::load_all" "load_all" 
"unique" "parseNamespaceFile" "parse_ns_file" "process_imports" "load_imports" "pkgload::load_all" "load_all" 
"tryCatch" "see_if" "assert_that" "idesc_get" "desc[["get"]]" "desc_desc_get" "pkg_name" "load_code" "pkgload::load_all" "load_all" 
"file.exists" "...elt" "stopifnot" "source_one" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "load_all" 
"file.exists" "...elt" "stopifnot" "source_one" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "load_all" 
"file.exists" "...elt" "stopifnot" "source_one" "source_many" "force" "withr_with_dir" "load_code" "pkgload::load_all" "load_all" 
"diff" "structure" "rle" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "<Anonymous>" "description$new" "desc_desc_get" "pkg_name" "load_dll" "pkgload::load_all" "load_all" 
"grepl" "read.dcf" "read_dcf" "idesc_create_text" "idesc_create_file" "idesc_create" "<Anonymous>" "description$new" "desc_desc_get" "pkg_name" "setup_ns_exports" "pkgload::load_all" "load_all" 
"file.exists" "packageDescription" "withCallingHandlers" "suppressWarnings" "utils::packageVersion" "nsenv[[f_name]]" "run_pkg_hook" "pkgload::load_all" "load_all" 
".Call" "f" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
".Call" "f" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
".Call" "f" "callFun" "rstudioapi::documentSaveAll" "save_all" "devtools::load_all" 
"getwd" "srcfilecopy" "parse" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "FUN" "lapply" "node_evaluator$eval.nodeforms" "simFromDAG" "simobs" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "set.DAG" "simulate_data" 
"$<-" "self$setnode.setenv" "node_evaluator$eval.nodeforms" "simFromDAG" "simobs" "sim" "simulate_data" 
"cb$putcode" "cmpSym" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpPrim2" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "h" "tryInline" "cmpCall" "cmp" "cmpComplexAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "FUN" "lapply" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"[.data.table" "[" "<Anonymous>" "super$get_data" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"apply" "<Anonymous>" "tmle3_Task$new" "survival_tx_task" "survival_spec$make_tmle_task" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "survival_task$get_regression_task" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "survival_task$get_regression_task" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "survival_task$get_regression_task" 
"unique" "factor" "cluster_folds" "origami::make_folds" "<Anonymous>" "survival_task$get_regression_task" 
"dim.data.table" "dim" "dim" "nrow" "<Anonymous>" "<Anonymous>" "survival_task$get_regression_task" 
"lapply" "assign_func_envs" "create_super_env" "LF_class$new" "define_lf" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"[.data.table" "[" "which" "process_data" "<Anonymous>" "sl3_Task$new" "withCallingHandlers" "suppressWarnings" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"validation" "reindex" "origami::make_fold" "FUN" "lapply" "sl3::subset_folds" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"$" "<Anonymous>" "base::serialize" "digest" "<Anonymous>" "sl3_Task$new" "withCallingHandlers" "suppressWarnings" "tmle_task$get_regression_task" "factor$delayed_train" "FUN" "lapply" "private$.train_sublearners" "learner$train_sublearners" "delayed_learner_train" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"file.exists" "packageDescription" "withCallingHandlers" "suppressWarnings" "packageVersion" "eval" "eval" "run.UniprocessFuture" "run" "makeFuture" ".makeFuture" "future" "<Anonymous>" "job_type$new" "self$compute_step" "scheduler$compute" "delayed_fit$compute" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"structure" "future::FutureResult" "withCallingHandlers" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "eval" "eval" "run.UniprocessFuture" "run" "makeFuture" ".makeFuture" "future" "<Anonymous>" "job_type$new" "self$compute_step" "scheduler$compute" "delayed_fit$compute" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
".make_numeric_version" "numeric_version" "as.numeric_version" "Ops.numeric_version" "<" "eval" "eval" "run.UniprocessFuture" "run" "makeFuture" ".makeFuture" "future" "<Anonymous>" "job_type$new" "self$compute_step" "scheduler$compute" "delayed_fit$compute" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"as.list" "lapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "FUN" "lapply" "unquote" "bquote" "getExpression.Future" "NextMethod" "getExpression.UniprocessFuture" "getExpression" "run.UniprocessFuture" "run" "makeFuture" ".makeFuture" "future" "<Anonymous>" "job_type$new" "self$compute_step" "scheduler$compute" "delayed_fit$compute" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"[[" "plan" "nbrOfWorkers" "nbrOfWorkers.NULL" "nbrOfWorkers" "plan_set" "future::plan" "tryCatch" "eval" "eval" "run.UniprocessFuture" "run" "makeFuture" ".makeFuture" "future" "<Anonymous>" "job_type$new" "self$compute_step" "scheduler$compute" "delayed_fit$compute" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"<Anonymous>" "lapply" "self$compute_step" "scheduler$compute" "delayed_fit$compute" "likelihood_def$train" "survival_tx_likelihood" "survival_spec$make_initial_likelihood" 
"base::serialize" "digest" "super$initialize" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"FUN" "apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "self$enumerate_cf_tasks" "<Anonymous>" "make_CF_Likelihood" "<Anonymous>" "Param_survival$new" "survival_spec$make_params" 
"findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"names" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"length" "length" "data.table::setnames" "super$get_data" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"FUN" "apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"getOption" "topenv" "cedta" "[.data.table" "[" "<Anonymous>" "super$get_data" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"apply" "new_task$initialize" "tmle_task$generate_counterfactual_task" "<Anonymous>" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_density" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_density" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"key" ".shallow" "shallow" "[.data.table" "[" "which" "process_data" "<Anonymous>" "sl3_Task$new" "withCallingHandlers" "suppressWarnings" "tmle_task$get_regression_task" "self$get_density" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"copy_slice" "self$clone" "task$next_in_chain" "self$subset_covariates" "learner_fit$base_predict" "learner_fit_predict" "rlang::eval_bare" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "<Anonymous>" "SequentialJob$new" "self$compute_step" "scheduler$compute" "delayed_preds$compute" "self$predict" "learner$predict_fold" "self$get_density" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"%in%" "is_primitive" "is_function" "set_names_impl" "set_names" "call_args" "lapply" "<Anonymous>" "Delayed$new" "<Anonymous>" "delayed_learner_fit_predict" "self$predict" "learner$predict_fold" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"<Anonymous>" "Scheduler$new" "delayed_preds$compute" "self$predict" "learner$predict_fold" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "self$clever_covariates" "ps$estimates" "colMeans" 
"forderv" "CJ" "do.call" "dcast.data.table" "dcast" "self$long_to_mat" "self$clever_covariates" "ps$estimates" "colMeans" 
"bmerge" "[.data.table" "[" "dcast.data.table" "dcast" "self$long_to_mat" "self$clever_covariates" "ps$estimates" "colMeans" 
"setDT" "dcast.data.table" "dcast" "self$long_to_mat" "self$clever_covariates" "ps$estimates" "colMeans" 
"FUN" "lapply" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "ps$estimates" "colMeans" 
"deparse" "name_dots" "data.table::data.table" "cbind" "<Anonymous>" "do.call" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "ps$estimates" "colMeans" 
"[.data.table" "[" "<Anonymous>" "self$get_data" "<Anonymous>" "base::serialize" "digest" "<Anonymous>" "sl3_Task$new" "withCallingHandlers" "suppressWarnings" "tmle_task$get_regression_task" "self$get_mean" "likelihood_factor$get_likelihood" "<Anonymous>" "self$get_likelihood" "<Anonymous>" "ps$estimates" "colMeans" 
"forderv" "dcast.data.table" "dcast" "self$long_to_mat" "ps$estimates" "colMeans" 
"copy" "recycle" "as.data.table.list" "data.table" "ps$estimates" "colMeans" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "FUN" "lapply" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "match.arg" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"as.list" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"eval" "FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"FUN" "lapply" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"FUN" "lapply" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"paste0" ".format.zeros" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"stopifnot" "modifyList" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"oldClass" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"match.arg" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"::" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"::" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"match.arg" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"formObj" "cat" "str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "<Anonymous>" "do.call" "strSub" "str.default" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"capture.output" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
"gc" "profvis::profvis" 
